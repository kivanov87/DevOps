pipeline
{
    agent
    {
        label 'docker-node'
    }
    environment
    {
        DOCKERHUB_CREDENTIALS=credentials('docker-hub')
    }
    stages
    {
        stage('Clone')
        {
            steps
            {
                git branch: 'main', url: 'http://192.168.111.101:3000/vagrant/exam'
            }  
        }
        stage('Create a network')
        {
            steps
            {
                sh '''
                docker network rm exam-net || true
                docker network ls | grep exam-net || docker network create exam-net
                '''
            }
        }
        stage('Build the Images')
        {
            steps
            {
                sh 'docker image rm -f Co1 Co2 Co3 || true'
                sh 'docker compose -f docker-compose-run.yml build'                               
            }
        }
        stage('Run the Containers')
        {
            steps
            {
                sh 'docker container rm -f Co1 Co2 Co3 || true'
                sh 'docker compose -f docker-compose-run.yml up -d'
            }
        }
                stage('Test')
        {
            steps
            {
                script
                {
                    echo 'Test #1 - Reachability'
                    sh 'sleep 5s && echo $(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080) | grep 200'

                    echo 'Test #2 - Check if Fun Facts Appears'
                    sh "curl --silent http://localhost:8080 | grep 'Fun Facts'"  
                }
            }
        }
        stage('CleanUp')
        {
            steps
            {
                sh 'docker container rm -f pipeline-exam-producer-1 pipeline-Co2-1 pipeline-exam-consumer-1 || true'
            }
        }
        stage('Login')
        {
            steps
            {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }            
        stage('Push')
        {
            steps
            {
                sh 'docker image rm ivanovka87/Co1 ivanovka87/Co2 ivanovka87/Co3 || true'
                sh 'docker image tag Co1 ivanovka87/Co1'
                sh 'docker image tag Co2 ivanovka87/Co2'
                sh 'docker image tag Co3 ivanovka87/Co3'
                sh 'docker push ivanovka87/Co1'
                sh 'docker push ivanovka87/Co2'
                sh 'docker push ivanovka87/Co3'
            }
        }
        stage('Deploy')
        {
            steps
            {
                sh 'docker image rm -f Co1-1 Co2-1 Co3-1 || true'
                sh 'docker compose -f docker-compose-deploy.yml up -d'
            }
        }    
    }
}